name: CI/CD Controller

on:
  pull_request:
    branches: [ "*" ]
  push:
    branches:
      - main
      - dev
      - 'releases/**'

jobs:
  determine-pipelines:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v36

      - name: Debug Changed Files
        run: echo "${{ steps.changed-files.outputs.all_changed_files }}"

      - name: Set Environment Variables for Services
        id: set-env
        run: |
          # Detect changes for each service and set flags
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" =~ "Microservices/user-service/" ]]; then
            echo "RUN_USERSERVICE_PIPELINE=true" >> $GITHUB_ENV
          fi
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" =~ "Microservices/product-service/" ]]; then
            echo "RUN_PRODUCTSERVICE_PIPELINE=true" >> $GITHUB_ENV
          fi
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" =~ "Microservices/order-service/" ]]; then
            echo "RUN_ORDERSERVICE_PIPELINE=true" >> $GITHUB_ENV
          
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" =~ "Microservices/gateway/" ]]; then
            echo "RUN_GATEWAYSERVICE_PIPELINE=true" >> $GITHUB_ENV
          
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" =~ "ClientApp" ]]; then
            echo "RUN_CLIENTAPP_PIPELINE=true" >> $GITHUB_ENV
          fi
          
      - name: Print Environment Variables
        run: |
          echo "RUN_USERSERVICE_PIPELINE=${{ env.RUN_USERSERVICE_PIPELINE }}"
          echo "RUN_PRODUCTSERVICE_PIPELINE=${{ env.RUN_PRODUCTSERVICE_PIPELINE }}"
          echo "RUN_ORDERSERVICE_PIPELINE=${{ env.RUN_ORDERSERVICE_PIPELINE }}"
          echo "RUN_GATEWAYSERVICE_PIPELINE=${{ env.RUN_GATEWAYSERVICE_PIPELINE }}"
          echo "RUN_CLIENTAPP_PIPELINE=${{ env.RUN_CLIENTAPP_PIPELINE }}"
   
  trigger-workflows:
    needs: determine-pipelines
    runs-on: ubuntu-latest
    steps:
      - name: Trigger UserService CI/CD
        if: ${{ env.RUN_USERSERVICE_PIPELINE == 'true' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: user-service-ci-cd.yml

      - name: Trigger ProductService CI/CD
        if: ${{ env.RUN_PRODUCTSERVICE_PIPELINE == 'true' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: product-service-ci-cd.yml

      - name: Trigger OrderService CI/CD
        if: ${{ env.RUN_ORDERSERVICE_PIPELINE == 'true' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: order-service-ci-cd.yml

      - name: Trigger GatewayService CI/CD
        if: ${{ env.RUN_GATEWAYSERVICE_PIPELINE == 'true' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: gateway-service-ci-cd.yml

      - name: Trigger ClientApp CI/CD
        if: ${{ env.RUN_CLIENTAPP_PIPELINE == 'true' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: frontend-ci-cd.yml

